/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.RepresentativeRole;

import Business.Asset.AssetDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BrokerRequest;
import Business.WorkQueue.WorkRequest;
import UI.Customer.DisplayCustomerInfoPanel;
import UI.Customer.DisplayMerchantInfoPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nemod
 */
public class ViewRepresentativejob extends javax.swing.JPanel {

    /**
     * Creates new form ViewRepresentativejob
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    private AssetDirectory assetDirectory;
    private Enterprise enterprise;
    
    public ViewRepresentativejob(JPanel userProcess, EcoSystem system, Enterprise enterprise, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcess;
        this.system = system;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.assetDirectory = (system.getAssetDirectory()== null) ? new AssetDirectory() : system.getAssetDirectory();

        populateReqTable();
    }
    
    public void populateReqTable() {
        DefaultTableModel model = (DefaultTableModel) housingtable.getModel();
        model.setRowCount(0);
        for (Network n : system.getNwkCatalog()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                for (WorkRequest workRequest : e.getWorkQueue().getWrkReqList()) {
                    if (workRequest instanceof BrokerRequest) {
                        if (((BrokerRequest) workRequest).getBroker().getUserName().equals(userAccount.getUserName())) {
                            Object[] row = new Object[model.getColumnCount()];
                            row[0] = workRequest;
                            row[1] = ((BrokerRequest) workRequest).getCustomer();
                            row[2] = ((BrokerRequest) workRequest).getMerchant();
                            row[3] = ((BrokerRequest) workRequest).getAsset().getAddress();
                            row[4] = ((BrokerRequest) workRequest).getAsset().getCity();
                            row[5] = ((BrokerRequest) workRequest).getAsset().getState();
                            row[6] = ((BrokerRequest) workRequest).getAsset().getZip();
                            row[7] = ((BrokerRequest) workRequest).getAvail();
                            row[8] = ((BrokerRequest) workRequest).getCustomerNote();
                            row[9] = ((BrokerRequest) workRequest).getExaminerNote();
                            row[10] = ((BrokerRequest) workRequest).getQuote();
                            row[11] = ((BrokerRequest) workRequest).getCustomer().getRole().toString();
                            model.addRow(row);
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        housingtable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lblicon = new javax.swing.JLabel();
        lbltitle = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblrepworkarea = new javax.swing.JLabel();
        BtnviewMerchant = new javax.swing.JButton();
        brnwiewappointerdetails = new javax.swing.JButton();
        btnbrowserproperties = new javax.swing.JButton();
        btnselectjob = new javax.swing.JButton();
        btndone = new javax.swing.JButton();
        lblcomments = new javax.swing.JLabel();
        txtFeedback = new javax.swing.JTextField();
        lblquoteamount = new javax.swing.JLabel();
        quoteTxt = new javax.swing.JTextField();
        btndecline = new javax.swing.JButton();
        lblviewdetails = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(44, 68, 80));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 460, 150, 160));

        housingtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "JobID", "Appointer", "Merchant", "Street", "City", "State", "Zipcode", "Status", "Customer Message", "Representative Message", "Quote", "Appointer"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, false, false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(housingtable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 860, 130));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lblicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/homeicon.png"))); // NOI18N

        lbltitle.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lbltitle.setText("HOUSE RENTALS");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblicon, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(789, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblicon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbltitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 70));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        lblrepworkarea.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblrepworkarea.setText("REPRESENTATIVE WORK PAGE");
        lblrepworkarea.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        BtnviewMerchant.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        BtnviewMerchant.setText("VIEW MERCHANT");
        BtnviewMerchant.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        BtnviewMerchant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnviewMerchantActionPerformed(evt);
            }
        });

        brnwiewappointerdetails.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        brnwiewappointerdetails.setText("VIEW APPOINTER");
        brnwiewappointerdetails.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        brnwiewappointerdetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brnwiewappointerdetailsActionPerformed(evt);
            }
        });

        btnbrowserproperties.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnbrowserproperties.setText("BROWSE REPRESENTATIVE");
        btnbrowserproperties.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnbrowserproperties.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnbrowserproperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbrowserpropertiesActionPerformed(evt);
            }
        });

        btnselectjob.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnselectjob.setText("SELECT JOB");
        btnselectjob.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnselectjob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnselectjobActionPerformed(evt);
            }
        });

        btndone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btndone.setText("JOB DONE");
        btndone.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btndone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndoneActionPerformed(evt);
            }
        });

        lblcomments.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblcomments.setText("COMMENTS:");

        txtFeedback.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblquoteamount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblquoteamount.setText("QUOTE:");

        quoteTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        quoteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quoteTxtActionPerformed(evt);
            }
        });

        btndecline.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btndecline.setText("DECLINE");
        btndecline.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btndecline.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btndecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeclineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(362, 362, 362)
                        .addComponent(lblrepworkarea))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(lblquoteamount, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quoteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123)
                        .addComponent(lblcomments)
                        .addGap(18, 18, 18)
                        .addComponent(txtFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(brnwiewappointerdetails, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(btnselectjob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnviewMerchant)
                            .addComponent(btndecline, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnbrowserproperties, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btndone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(473, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblrepworkarea)
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnviewMerchant)
                    .addComponent(brnwiewappointerdetails)
                    .addComponent(btnbrowserproperties))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnselectjob)
                    .addComponent(btndone)
                    .addComponent(btndecline))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblquoteamount, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quoteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblcomments)
                    .addComponent(txtFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1280, 270));

        lblviewdetails.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblviewdetails.setForeground(new java.awt.Color(255, 255, 255));
        lblviewdetails.setText("VIEW DETAILS");
        jPanel1.add(lblviewdetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 340, 130, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnbrowserpropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbrowserpropertiesActionPerformed
        // TODO add your handling code here:
        int selectedRow = housingtable.getSelectedRow();
        int count = housingtable.getSelectedRowCount();
        if (count == 1) {
            BrokerRequest agentRequest = (BrokerRequest) housingtable.getValueAt(selectedRow, 0);
            String requestStatus = (String) housingtable.getValueAt(selectedRow, 7);
            if (requestStatus.equalsIgnoreCase("In Progress")) {
                AssignPropety assignPropety = new AssignPropety(userProcessContainer, userAccount, system, agentRequest);
                userProcessContainer.add("AssignPropety", assignPropety);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            } else {
                JOptionPane.showMessageDialog(null, "Please set this job in progress to suggest houses!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select one row!");
        }
    }//GEN-LAST:event_btnbrowserpropertiesActionPerformed

    private void brnwiewappointerdetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brnwiewappointerdetailsActionPerformed
        // TODO add your handling code here:
       int selectedRow = housingtable.getSelectedRow();

        int count = housingtable.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                UserAccount buyerAcc = (UserAccount) housingtable.getValueAt(selectedRow, 1);
                DisplayCustomerInfoPanel displayCustomerInfoPanel = new DisplayCustomerInfoPanel(userProcessContainer, buyerAcc, userAccount, system);
                userProcessContainer.add("DisplayCustomerInfoPanel", displayCustomerInfoPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            } else {
                JOptionPane.showMessageDialog(null, "Please select a Row!!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_brnwiewappointerdetailsActionPerformed

    private void BtnviewMerchantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnviewMerchantActionPerformed
        // TODO add your handling code here:
        int selectedRow = housingtable.getSelectedRow();

        int count = housingtable.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                UserAccount sellerAcc = (UserAccount) housingtable.getValueAt(selectedRow, 2);
                DisplayMerchantInfoPanel displayMerchantInfoPanel = new DisplayMerchantInfoPanel(userProcessContainer, sellerAcc, userAccount, system);
                userProcessContainer.add("DisplayMerchantInfoPanel", displayMerchantInfoPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            } else {
                JOptionPane.showMessageDialog(null, "Please select a Row!!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
        
    }//GEN-LAST:event_BtnviewMerchantActionPerformed

    private void btnselectjobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnselectjobActionPerformed
       int selectedRow = housingtable.getSelectedRow();
        if (selectedRow >= 0) {
            BrokerRequest checkRequest = (BrokerRequest) housingtable.getValueAt(selectedRow, 0);
            try {
                Double quote = Double.parseDouble(quoteTxt.getText());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Please enter valid & non empty value for Quote");
                return;
            }
            if (!"In Progress".equals(checkRequest.getAvail())) {
                checkRequest.setAvail("In Progress");
                checkRequest.setQuote(quoteTxt.getText());
                userAccount.setAvail("Occupied");
                JOptionPane.showMessageDialog(null, "Job Taken Successfully!");
                populateReqTable();
            } else {
                JOptionPane.showMessageDialog(null, "Job is already taken!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select one row!");
        }
    }//GEN-LAST:event_btnselectjobActionPerformed

    private void quoteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quoteTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quoteTxtActionPerformed

    private void btndoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndoneActionPerformed
        // TODO add your handling code here:
      int selectedRow = housingtable.getSelectedRow();
        if (selectedRow >= 0) {
            BrokerRequest checktRequest = (BrokerRequest) housingtable.getValueAt(selectedRow, 0);
            String feedback = txtFeedback.getText();
            if (feedback.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please enter valid & non empty value for feedback");
                return;
            }
            if (!"Completed".equals(checktRequest.getAvail())) {
                checktRequest.setAvail("Completed");
                checktRequest.setExaminerNote(feedback);
                JOptionPane.showMessageDialog(null, "Job is set to completed!");
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to set your status to Available?", "Warning", dialogButton);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    userAccount.setAvail("Available");
                }
                populateReqTable();
            } else {
                JOptionPane.showMessageDialog(null, "Job is already completed!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select one row!");
        }
              
        
    }//GEN-LAST:event_btndoneActionPerformed

    private void btndeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeclineActionPerformed
        // TODO add your handling code here:
        int selectedRow = housingtable.getSelectedRow();
        if (selectedRow >= 0) {
            BrokerRequest checkRequest = (BrokerRequest) housingtable.getValueAt(selectedRow, 0);
            String feedback = txtFeedback.getText();
            if (feedback.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please enter valid & non empty value for feedback");
                return;
            }
            if (!"Completed".equals(checkRequest.getAvail()) && !"In Progress".equals(checkRequest.getAvail())) {
                checkRequest.setAvail("Rejected");
                checkRequest.setExaminerNote(feedback);
                JOptionPane.showMessageDialog(null, "Job is set to rejected!");
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to set your status to Available?", "Warning", dialogButton);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    userAccount.setAvail("Available");
                }
                populateReqTable();
            } else {
                JOptionPane.showMessageDialog(null, "Job is already " + checkRequest.getAvail());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select one row!");
        }
       
        
    }//GEN-LAST:event_btndeclineActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnviewMerchant;
    private javax.swing.JButton brnwiewappointerdetails;
    private javax.swing.JButton btnbrowserproperties;
    private javax.swing.JButton btndecline;
    private javax.swing.JButton btndone;
    private javax.swing.JButton btnselectjob;
    private javax.swing.JTable housingtable;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblcomments;
    private javax.swing.JLabel lblicon;
    private javax.swing.JLabel lblquoteamount;
    private javax.swing.JLabel lblrepworkarea;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JLabel lblviewdetails;
    private javax.swing.JTextField quoteTxt;
    private javax.swing.JTextField txtFeedback;
    // End of variables declaration//GEN-END:variables
}
