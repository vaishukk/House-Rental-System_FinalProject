/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.AssetManager;

import Business.Asset.Asset;
import Business.Asset.AssetDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organisation.Organisation;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ControlRequest;
//import Business.WorkQueue.HandlerRequest;
import Business.WorkQueue.WorkRequest;
import UI.Customer.DisplayCustomerInfoPanel;
import UI.Customer.DisplayMerchantInfoPanel;
import UI.Customer.RecruitallServicesPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kiran
 */
public class ViewOppurtunitiesPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewOppurtunitiesPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount useraccount;
    private AssetDirectory assetDirectory;
    private Enterprise enterprise;
    private Network network;
    private Organisation organisation;
    public ViewOppurtunitiesPanel(JPanel userProcessContainer, Organisation organisation, Network network, Enterprise enterprise, UserAccount useraccount, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.useraccount = useraccount;
        this.assetDirectory = (system.getAssetDirectory()== null) ? new AssetDirectory() : system.getAssetDirectory();
        this.network = network;
        this.enterprise = enterprise;
        this.organisation = organisation;
        this.enterprise = enterprise;
        this.assetDirectory = (system.getAssetDirectory()== null) ? new AssetDirectory() : system.getAssetDirectory();
        popuateAssetTable();
        populateReqTable();
    }

    public void popuateAssetTable() {
        DefaultTableModel model = (DefaultTableModel) tableassetmanagement.getModel();
        model.setRowCount(0);
        for (Asset asset : assetDirectory.getAssetList()) {
            Object[] row = new Object[12];
            row[0] = asset.getAssetID();
            row[1] = asset.getAssetName();
            row[2] = asset.getAddress();
            row[3] = asset.getCity();
            row[4] = asset.getState();
            row[5] = asset.getZip();
            row[6] = asset.getBedroom();
            row[7] = asset.getBaths();
            row[8] = asset.getCost();
            row[9] = asset.getAvail();
            row[10] = asset.getMerchant();
            row[11] = asset.getMerchant().getName();
            model.addRow(row);
        }
    }

    public void populateReqTable() {
        DefaultTableModel model = (DefaultTableModel) housingtable.getModel();
        model.setRowCount(0);
        for (Network n : system.getNwkCatalog()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                for (WorkRequest workRequest : e.getWorkQueue().getWrkReqList()) {
                    if (workRequest instanceof ControlRequest) {
                        if (((ControlRequest) workRequest).getControl().getUserName().equals(useraccount.getUserName())) {
                            Object[] row = new Object[model.getColumnCount()];
                            row[0] = workRequest;
                            row[1] = ((ControlRequest) workRequest).getCustomer();
                            row[2] = ((ControlRequest) workRequest).getMerchant();
                            row[3] = ((ControlRequest) workRequest).getAsset().getAddress();
                            row[4] = ((ControlRequest) workRequest).getAsset().getCity();
                            row[5] = ((ControlRequest) workRequest).getAsset().getState();
                            row[6] = ((ControlRequest) workRequest).getAsset().getZip();
                            row[7] = ((ControlRequest) workRequest).getAvail();
                            row[8] = ((ControlRequest) workRequest).getCustomerNote();
                            row[9] = ((ControlRequest) workRequest).getExaminerNote();
                            model.addRow(row);
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableassetmanagement = new javax.swing.JTable();
        btnrecruit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lbltitle = new javax.swing.JLabel();
        lblicon1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        housingtable = new javax.swing.JTable();
        btnviewmerchant = new javax.swing.JButton();
        btnviewcustomer = new javax.swing.JButton();
        btnselectjob = new javax.swing.JButton();
        btndecline = new javax.swing.JButton();
        btnjobdone = new javax.swing.JButton();
        lblquote = new javax.swing.JLabel();
        getquote = new javax.swing.JTextField();
        lblcomments = new javax.swing.JLabel();
        getcomments = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(44, 68, 80));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableassetmanagement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Property_id", " Name", "StreetName", "City", "State", "Zipcode", "No of Bhk", "Restrooms", "Price", "Availibilty", "SellingPrice", "Seller"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableassetmanagement);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, 830, 110));

        btnrecruit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnrecruit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-select-64.png"))); // NOI18N
        btnrecruit.setText("RECRUIT");
        btnrecruit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnrecruit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnrecruit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrecruitActionPerformed(evt);
            }
        });
        jPanel1.add(btnrecruit, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 590, 150, 50));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lbltitle.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lbltitle.setText("HOUSE RENTALS");

        lblicon1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/homeicon.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblicon1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(806, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblicon1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lbltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 70));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel3.setText("ASSET MANAGER PAGE");
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        housingtable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        housingtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Job_id", "Appointer", "Merchant", "Address", "City", "State", "Zipcode", "Availibility", "Customer Message", "Asset Manger Message", "Quote", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, false, false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(housingtable);

        btnviewmerchant.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnviewmerchant.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-broker-48.png"))); // NOI18N
        btnviewmerchant.setText("VIEW MERCHANT");
        btnviewmerchant.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnviewmerchant.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnviewmerchant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewmerchantActionPerformed(evt);
            }
        });

        btnviewcustomer.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnviewcustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-employee-48.png"))); // NOI18N
        btnviewcustomer.setText("VIEW CUSTOMERS");
        btnviewcustomer.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnviewcustomer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnviewcustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewcustomerActionPerformed(evt);
            }
        });

        btnselectjob.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnselectjob.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-online-jobs-application-available-on-a-smartphone-24.png"))); // NOI18N
        btnselectjob.setText("SELECT JOB");
        btnselectjob.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnselectjob.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnselectjob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnselectjobActionPerformed(evt);
            }
        });

        btndecline.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btndecline.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-cross-mark-48.png"))); // NOI18N
        btndecline.setText("DECLINE");
        btndecline.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btndecline.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btndecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeclineActionPerformed(evt);
            }
        });

        btnjobdone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnjobdone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-verification-tick-mark-for-digital-certification-document-24.png"))); // NOI18N
        btnjobdone.setText("JOB DONE");
        btnjobdone.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnjobdone.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnjobdone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnjobdoneActionPerformed(evt);
            }
        });

        lblquote.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblquote.setText("QUOTE:");

        getquote.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getquote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getquoteActionPerformed(evt);
            }
        });

        lblcomments.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblcomments.setText("COMMENTS:");

        getcomments.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-page-48.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnviewmerchant)
                    .addComponent(btnselectjob, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btndecline, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnviewcustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnjobdone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(474, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblquote, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(getquote, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(lblcomments)
                        .addGap(34, 34, 34)
                        .addComponent(getcomments, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(456, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnviewmerchant, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnviewcustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btndecline, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnselectjob, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnjobdone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(getcomments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblcomments))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblquote, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(getquote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(67, 67, 67))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1290, 360));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("HIRING SERVICES DETAILS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 440, 230, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 951, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnselectjobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnselectjobActionPerformed
       int selectedRow = housingtable.getSelectedRow();
        if (selectedRow >= 0) {
            ControlRequest checkRequest = (ControlRequest) housingtable.getValueAt(selectedRow, 0);
            try {
                Double quote = Double.parseDouble(getquote.getText());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Please enter valid & non empty value for Quote");
                return;
            }
            if (!"In Progress".equals(checkRequest.getAvail())) {
                checkRequest.setAvail("In Progress");
                checkRequest.setQuote(getquote.getText());
                useraccount.setAvail("Occupied");
                JOptionPane.showMessageDialog(null, "Job Taken Successfully!");
                populateReqTable();
            } else {
                JOptionPane.showMessageDialog(null, "Job is already taken!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select one row!");
        }
    }//GEN-LAST:event_btnselectjobActionPerformed

    private void btnjobdoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnjobdoneActionPerformed
        // TODO add your handling code here:
       int selectedRow = housingtable.getSelectedRow();
        if (selectedRow >= 0) {
            ControlRequest checkRequest = (ControlRequest) housingtable.getValueAt(selectedRow, 0);
            String comments = getcomments.getText();
            if (comments.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please enter valid & non empty value for feedback");
                return;
            }
            if (!"Completed".equals(checkRequest.getAvail())) {
                checkRequest.setAvail("Completed");
                checkRequest.setExaminerNote(comments);
                JOptionPane.showMessageDialog(null, "Job is set to completed!");
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to set your status to Available?", "Warning", dialogButton);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    useraccount.setAvail("Available");
                }
                populateReqTable();
            } else {
                JOptionPane.showMessageDialog(null, "Job is already completed!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select one row!");
        }
    }//GEN-LAST:event_btnjobdoneActionPerformed

    private void getquoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getquoteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getquoteActionPerformed

    private void btnviewcustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewcustomerActionPerformed
        // TODO add your handling code here:
      int selectedRow = housingtable.getSelectedRow();

        int count = housingtable.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                UserAccount custAcc = (UserAccount) housingtable.getValueAt(selectedRow, 1);
                DisplayCustomerInfoPanel displayCustomerInfoPanel = new DisplayCustomerInfoPanel(userProcessContainer, custAcc, useraccount, system);
                userProcessContainer.add("DisplayCustomerInfoPanel", displayCustomerInfoPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            } else {
                JOptionPane.showMessageDialog(null, "Please select a Row!!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
       
    }//GEN-LAST:event_btnviewcustomerActionPerformed

    private void btnviewmerchantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewmerchantActionPerformed
        // TODO add your handling code here:
        int selectedRow = housingtable.getSelectedRow();

        int count = housingtable.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                UserAccount merchantAcc = (UserAccount) housingtable.getValueAt(selectedRow, 2);
                DisplayMerchantInfoPanel displayMerchantInfoPanel = new DisplayMerchantInfoPanel(userProcessContainer, merchantAcc, useraccount, system);
                userProcessContainer.add("DisplayMerchantInfoPanel", displayMerchantInfoPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            } else {
                JOptionPane.showMessageDialog(null, "Please select a Row!!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_btnviewmerchantActionPerformed

    private void btnrecruitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrecruitActionPerformed
       int selectedRow = tableassetmanagement.getSelectedRow();
        int count = tableassetmanagement.getSelectedRowCount();
        if (count == 1) {
            String assetID = (String) tableassetmanagement.getValueAt(selectedRow, 0);
            Asset asset = assetDirectory.fetchAsset(assetID);

            RecruitallServicesPanel recruitallServicesPanel = new RecruitallServicesPanel(userProcessContainer, organisation, network, enterprise, asset, system, useraccount);
            userProcessContainer.add("RecruitallServicesPanel", recruitallServicesPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);

        } else {
            JOptionPane.showMessageDialog(null, "Please select one row!");
        }
    }//GEN-LAST:event_btnrecruitActionPerformed

    private void btndeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeclineActionPerformed
        // TODO add your handling code here:
        int selectedRow = housingtable.getSelectedRow();
        if (selectedRow >= 0) {
            ControlRequest checkRequest = (ControlRequest) housingtable.getValueAt(selectedRow, 0);
            String comment = getcomments.getText();
            if (comment.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please enter valid & non empty value for feedback");
                return;
            }
            if (!"Completed".equals(checkRequest.getAvail()) && !"In Progress".equals(checkRequest.getAvail())) {
                checkRequest.setAvail("Rejected");
                checkRequest.setExaminerNote(comment);
                JOptionPane.showMessageDialog(null, "Job is set to rejected!");
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to set your status to Available?", "Warning", dialogButton);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    useraccount.setAvail("Available");
                }
                populateReqTable();
            } else {
                JOptionPane.showMessageDialog(null, "Job is already " + checkRequest.getAvail());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select one row!");
        }
       
    }//GEN-LAST:event_btndeclineActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndecline;
    private javax.swing.JButton btnjobdone;
    private javax.swing.JButton btnrecruit;
    private javax.swing.JButton btnselectjob;
    private javax.swing.JButton btnviewcustomer;
    private javax.swing.JButton btnviewmerchant;
    private javax.swing.JTextField getcomments;
    private javax.swing.JTextField getquote;
    private javax.swing.JTable housingtable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblcomments;
    private javax.swing.JLabel lblicon1;
    private javax.swing.JLabel lblquote;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JTable tableassetmanagement;
    // End of variables declaration//GEN-END:variables
}
